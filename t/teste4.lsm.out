PROGRAM ID [id=teste4]
 DECLARE dd
 INTEGER ID [id=divisor], ID [id=number]; 
 BOOLEAN ID [id=nofactor], ID [id=prime]
 DO dlREAD ( ID [id=number])  vi; 
 WRITE ( ID [id=number])  vitermsimple_expr1; 
 ID [id=divisor]ASSIGNOP  vi variable assignID [id=number];  vitermsimple_expr1 expression
 ID [id=nofactor]ASSIGNOP  vi variable assignTRUE ; termsimple_expr1 expression
 WHILE ID [id=nofactor]AND  vi( ID [id=divisor]RELOP  vitermsimple_expr2comparisonUINT [uint=1]) termsimple_expr2.1DO termsimple_expr1
 IF ( ID [id=number]MULOP  viID [id=divisor])  vitermsimple_expr1RELOP termsimple_expr2comparisonUINT [uint=0]THEN termsimple_expr2.1ID [id=nofactor]ASSIGNOP  vi variable assignFALSE 
 ELSE termsimple_expr1 expressionID [id=divisor]ASSIGNOP  vi variable assignID [id=divisor]ADDOP  vitermsimple_expr4UINT [uint=1]
 END simple_expr1 expression
 END ; 
 ID [id=prime]ASSIGNOP  vi variable assignID [id=nofactor];  vitermsimple_expr1 expression
 IF ID [id=prime]THEN  vitermsimple_expr1WRITE ( STRING ) termsimple_expr1ELSE WRITE ( STRING ) termsimple_expr1END 
 END [declare=declare]